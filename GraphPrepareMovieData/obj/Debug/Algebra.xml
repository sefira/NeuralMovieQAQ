<?xml version="1.0" encoding="utf-8"?>
<ScriptAndGraph GraphType="VertexCommands">
  <Vertices count="11">
    <Vertex index="1" command="-scopeVertex SV1_Extract  -i https://cosmos09.osdinfra.net:443/cosmos/searchSTC-A/my/MovieDomain/Entity.ss[0:1021182798] -ichannel GetSStream_0[0,0,0] -i https://cosmos09.osdinfra.net:443/cosmos/searchSTC-A/my/MovieDomain/Entity.ss[1021182798:2262608022] -ichannel GetSStream_0[1,0,0] -i https://cosmos09.osdinfra.net:443/cosmos/searchSTC-A/my/MovieDomain/Entity.ss[2262608022:2886246345] -ichannel GetSStream_0[2,0,0] -i https://cosmos09.osdinfra.net:443/cosmos/searchSTC-A/my/MovieDomain/Entity.ss[2886246345:3503595746] -ichannel GetSStream_0[3,0,0]  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV1_Extract_out0" />
    <Vertex index="2" command="-scopeVertex SV2_Split  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV1_Extract_out0 -ichannel SV1_Extract_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV2_Split_out0 -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV2_Split_out1" />
    <Vertex index="3" command="-scopeVertex SV3_Aggregate  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV2_Split_out0 -ichannel SV2_Split_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV3_Aggregate_out0" />
    <Vertex index="4" command="-scopeVertex SV4_Cross_Partition  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV2_Split_out1 -ichannel SV2_Split_out1 -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV3_Aggregate_out0 -ichannel SV3_Aggregate_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV4_Cross_Partition_out0_[0] -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV4_Cross_Partition_out0_[1]" />
    <Vertex index="5" command="-scopeVertex SV5_Split  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV4_Cross_Partition_out0_[0] -ichannel SV4_Cross_Partition_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out0_[0] -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out1_[0]" />
    <Vertex index="6" command="-scopeVertex SV5_Split  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV4_Cross_Partition_out0_[1] -ichannel SV4_Cross_Partition_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out0_[1] -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out1_[1]" />
    <Vertex index="7" command="-scopeVertex SV6_Aggregate  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out1_[0] -ichannel SV5_Split_out1 -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out1_[1] -ichannel SV5_Split_out1  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV6_Aggregate_out0" />
    <Vertex index="8" command="-scopeVertex SV7_Process  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV1_Extract_out0 -ichannel SV1_Extract_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV7_Process_out0" />
    <Vertex index="9" command="-scopeVertex SV8_Process  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV1_Extract_out0 -ichannel SV1_Extract_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV8_Process_out0" />
    <Vertex index="10" command="-scopeVertex SV9_Combine  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV8_Process_out0 -ichannel SV8_Process_out0 -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV7_Process_out0 -ichannel SV7_Process_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV9_Combine_out0" />
    <Vertex index="11" command="-scopeVertex SV10_Process  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV8_Process_out0 -ichannel SV8_Process_out0  -o D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV10_Process_out0" />
    <Vertex command="-concatenate  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out0_[0] -ichannel SV5_Split_out0  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV5_Split_out0_[1] -ichannel SV5_Split_out0  -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV6_Aggregate_out0 -ichannel SV6_Aggregate_out0 -o my/MovieDomain/GraphPrepareMovieData/Entity.ss" />
    <Vertex command="-concatenate -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV9_Combine_out0 -o my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37junkmovie_name.csv" />
    <Vertex command="-concatenate -i D:\MovieDomain\GraphPrepareMovieData\bin\Debug\89E6B7EE8A179392\_Temp\GraphPrepareMovieData_AF575C2F145B3DB\scopetmpfile._SV10_Process_out0 -o my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37robustmovie_name.csv" />
  </Vertices>
  <Outputs>
    <Output path="my/MovieDomain/GraphPrepareMovieData/Entity.ss" isBinary="True" />
    <Output path="my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37junkmovie_name.csv" isBinary="False" schema="Key:string,KGId:string,Genres:string,Artists:string,Directors:string,Characters:string,Performance:string,Distributors:string,Channels:string,Albums:string,Name:string,Alias:string,Description:string,Segments:string,Categories:string,IntEmbeddedFilters:string,NumberOfWantToWatch:string,Rating:string,NumberOfShortReview:string,ReviewCount:string,NumberOfWatched:string,NumberOfReviewer:string,PublishDate:string,Length:string,Country:string,Language:string,SourceUrls:string,ImageUrls:string,OfficialSite:string,EntityContainer:string,Logo:string,QueryRank:string" />
    <Output path="my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37robustmovie_name.csv" isBinary="False" schema="Key:string,KGId:string,Genres:string,Artists:string,Directors:string,Characters:string,Performance:string,Distributors:string,Channels:string,Albums:string,Name:string,Alias:string,Description:string,Segments:string,Categories:string,IntEmbeddedFilters:string,NumberOfWantToWatch:string,Rating:string,NumberOfShortReview:string,ReviewCount:string,NumberOfWatched:string,NumberOfReviewer:string,PublishDate:string,Length:string,Country:string,Language:string,SourceUrls:string,ImageUrls:string,OfficialSite:string,EntityContainer:string,Logo:string,QueryRank:string" />
  </Outputs>
  <graph JobType="BatchScopeServerGC" SStreamInfoFilePath="__SStreamInfo__.xml" vertexExecutable="scopehost.exe" BroadcastCopyThroughCommandLine="ScopeEngine.dll -scopeVertex SV_CopyThrough">
    <process id="SV1_Extract" command="ScopeEngine.dll -scopeVertex SV1_Extract" managedMemorySize="838860800" nativeIOMemorySize="1073741826" nativeExecutionMemorySize="524288000" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="GetSStream_0[ALL,ALL,ALL]" structuredStream="https://cosmos09.osdinfra.net:443/cosmos/searchSTC-A/my/MovieDomain/Entity.ss" />
      <output id="SV1_Extract_out0" />
    </process>
    <process id="SV2_Split" command="ScopeEngine.dll -scopeVertex SV2_Split" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="83886084" nativeExecutionMemorySize="5834276860">
      <input id="SV1_Extract_out0" />
      <output id="SV2_Split_out0" />
      <output id="SV2_Split_out1" />
    </process>
    <process id="SV3_Aggregate" aggregate="Full" command="ScopeEngine.dll -scopeVertex SV3_Aggregate" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="33554434" nativeExecutionMemorySize="524288000" internalVertexCommand="ScopeEngine.dll -scopeVertex SV3_Aggregate_Internal" internalNativeOnly="true" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="SV2_Split_out0" />
      <output id="SV3_Aggregate_out0" />
    </process>
    <process id="SV4_Cross_Partition" command="ScopeEngine.dll -scopeVertex SV4_Cross_Partition" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="67108868" nativeExecutionMemorySize="1048576000">
      <input id="SV2_Split_out1" />
      <input id="SV3_Aggregate_out0" connectionType="broadcast" />
      <output id="SV4_Cross_Partition_out0[1...2]" />
    </process>
    <process id="SV5_Split" command="ScopeEngine.dll -scopeVertex SV5_Split" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="1970274305" nativeExecutionMemorySize="786432000">
      <input id="SV4_Cross_Partition_out0[dim_0]" />
      <output id="SV5_Split_out0[dim_0]" />
      <output id="SV5_Split_out1[dim_0]" />
    </process>
    <process id="SV6_Aggregate" aggregate="Full" command="ScopeEngine.dll -scopeVertex SV6_Aggregate" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="896532481" nativeExecutionMemorySize="524288000" internalVertexCommand="ScopeEngine.dll -scopeVertex SV6_Aggregate_Internal" internalNativeOnly="true">
      <input id="SV5_Split_out1[ALL]" />
      <output id="SV6_Aggregate_out0" />
    </process>
    <dataset id="Concatenate_14[]" cosmosStream="my/MovieDomain/GraphPrepareMovieData/Entity.ss">
      <element id="SV5_Split_out0[ANY]" />
      <element id="SV6_Aggregate_out0" />
    </dataset>
    <process id="SV7_Process" command="ScopeEngine.dll -scopeVertex SV7_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="58720259" nativeExecutionMemorySize="5859442685" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="SV1_Extract_out0" />
      <output id="SV7_Process_out0" />
    </process>
    <process id="SV8_Process" command="ScopeEngine.dll -scopeVertex SV8_Process" managedMemorySize="1388314624" nativeIOMemorySize="58720259" nativeExecutionMemorySize="4471128061" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="SV1_Extract_out0" />
      <output id="SV8_Process_out0" />
    </process>
    <process id="SV9_Combine" command="ScopeEngine.dll -scopeVertex SV9_Combine" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="1639972869" nativeExecutionMemorySize="4278190075" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="SV8_Process_out0" />
      <input id="SV7_Process_out0" />
      <output id="SV9_Combine_out0" cosmosStream="my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37junkmovie_name.csv" />
    </process>
    <process id="SV10_Process" command="ScopeEngine.dll -scopeVertex SV10_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="1581252610" nativeExecutionMemorySize="262144000" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex">
      <input id="SV8_Process_out0" />
      <output id="SV10_Process_out0" cosmosStream="my/MovieDomain/GraphPrepareMovieData/2017-05-12-09-37robustmovie_name.csv" />
    </process>
  </graph>
  <Scopescript>REFERENCE @"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Core.dll";
//Script GUID:38aaf275-e4ad-433a-be4e-05337c6e2eb3
//Used for tracking history

#DECLARE TimeNow string = DateTime.Now.ToString("yyyy-MM-dd-HH-mm");
#DECLARE filename string = @"/my/MovieDomain/Entity.ss";
rs0 = SSTREAM @filename;

rs0 =
    SELECT 
        Key,
        KGId,
        Generes AS Genres,                  //Moive Type
        Artists,                            //Actors
        Directors,                          //Directors
        Characters,
        Performance,                        //Actors with order
        Distributors,
        Channels,
        Albums,
        Name,                               //Movie Name
        Alias,
        Description,
        Segments,
        Categories,
        IntEmbeddedFilters,
        Popularity AS NumberOfWantToWatch,  //Number of People Who Want to watch
        Rating AS Rating,                   //The Rating
        RatingCount AS NumberOfShortReview, //Number of Short Review
        ReviewCount,
        VisitCount AS NumberOfWatched,      //Number of People Who Watched
        Rank AS NumberOfReviewer,           //Number of Reviewer for the Rating
        PublishDate,                        //Publish Date
        Length,                             //How Long is the Movie
        Geographies AS Country,             //Country
        Filter AS Language,                 //Language
        SourceUrls,
        ImageUrls,
        OfficialSite,
        EntityContainer,
        Logo,
        QueryRank
    FROM 
        rs0
    HAVING
        !string.IsNullOrEmpty(NumberOfWatched) &amp;&amp;
        Int32.Parse(Rating) &gt; 0
    ;

#DECLARE path_root string = @"/my/MovieDomain/GraphPrepareMovieData/";
#DECLARE output_robustmoviefilename string = @path_root + @TimeNow + @"robustmovie_name.csv";
#DECLARE output_junkmoviefilename string = @path_root + @TimeNow + @"junkmovie_name.csv";

OUTPUT rs0 TO SSTREAM @"/my/MovieDomain/GraphPrepareMovieData/Entity.ss" 
    CLUSTERED BY Name 
    SORTED BY Name
    ;

// after read data, we split movie into robust movie and junk movie 
robust_movie =
    PROCESS rs0
    USING ExceptJunkMovieProcessor
    ;

robust_movie =
    SELECT *
    FROM robust_movie
    ORDER BY Name ASC
    ;

OUTPUT robust_movie
    TO @output_robustmoviefilename
    USING DefaultTextOutputter(delimiter: ',')
    ;

junk_movie =
    SELECT *
    FROM rs0
    EXCEPT ALL
    SELECT *
    FROM robust_movie
    ;

junk_movie =
    SELECT *
    FROM junk_movie
    ORDER BY Name ASC
    ;

OUTPUT junk_movie
    TO @output_junkmoviefilename
    USING DefaultTextOutputter(delimiter: ',')
    ;
#CS
using Microsoft.SCOPE.Types;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using ScopeRuntime;
using System.Text.RegularExpressions;
using ScopeRuntime.Diagnostics;

public class ExceptJunkMovieProcessor : Processor
{
    public override Schema Produces(string[] requested_columns, string[] args, Schema input_schema)
    {
        //Name AS MovieName,                  //Movie Name
        //Generes AS Genres,                  //Moive Type
        //Artists AS Artists,                 //Actors
        //Performance AS Performance,         //Actors with order
        //Directors AS Directors,             //Directors
        //Rating AS Rating,                   //The Rating
        //RatingCount AS NumberOfShortReview, //Number of Short Review
        //VisitCount AS NumberOfWatched,      //Number of People Who Watched
        //Popularity AS NumberOfWantToWatch,  //Number of People Who Want to watch
        //Rank AS NumberOfReviewer,           //Number of Reviewer for the Rating
        //PublishDate AS PublishDate,         //Publish Date
        //Length AS Length,                   //How Long is the Movie
        //Geographies AS Country,             //Country
        //Filter AS Language                  //Language
        var output_schema = input_schema.Clone();
        return output_schema;
    }

    public override IEnumerable&lt;Row&gt; Process(RowSet input_rowset, Row output_row, string[] args)
    {
        foreach (Row input_row in input_rowset.Rows)
        {
            if (!string.IsNullOrEmpty(input_row["NumberOfReviewer"].String) &amp;&amp; Int32.Parse(input_row["NumberOfReviewer"].String) &gt; 8000)
            {
                input_row.CopyTo(output_row);
                yield return output_row;
            }
        }
    }
}
#ENDCS

// Generated by ScopeStudio, version 2.0.9560.0
</Scopescript>
  <Optimization succeeded="true" time="00:00:00.5199060" latency="43966.536969474408" totalCost="139518.28489483273" />
  <ScopeVertexAnnotations />
</ScriptAndGraph>